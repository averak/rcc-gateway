import { Injectable } from '@angular/core';

type MessageDict = {
  [key: number]: string;
};

@Injectable({
  providedIn: 'root',
})
export class ErrorMessageResolverService {
  messages: MessageDict = {
    401: 'ユーザが認証されていません。',
    403: 'その操作は許可されていません。',
    404: '存在しないURLへはアクセスできません。',
    500: '予期せぬエラーが発生しました。',
    1000: '予期せぬエラーが発生しました。',
    1101: '存在しないユーザです。問題が解決しない場合は、管理者までご連絡ください。',
    1102: '存在しないロールです。',
    1103: '存在しない予約です。',
    1104: 'APIが見つかりません。',
    1200: 'そのメールアドレスは既に登録済みです。',
    1201: 'その時刻は既に予約済みです。',
    1300: 'その動作は許可されていません。',
    1400: '無効なリクエストです。',
    1401: 'パスワードの長さは8~32文字にしてください。',
    1402: 'パスワードが単純すぎます。大文字・小文字、数字を含める必要があります。',
    1403: '不正な予約時間です。',
    1404: '予約時間が長すぎます。詳細な制約はリファレンスを参照してください。',
    1405: '過去の時間には予約できません。',
    1406: '過去の予約は編集できません。',
    1407: '過去の予約は削除できません。',
    1408: '9:00~20:00の範囲で予約してください。',
    1500: 'ユーザはログインしていません。問題が解決しない場合は、管理者までご連絡ください。',
    1501: 'パスワードが間違っています。問題が解決しない場合は、管理者までご連絡ください。',
    1502: '無効なアクセストークンです。再度ログインしてください。',
    1503: '期限切れのアクセストークンです。再度ログインしてください。',
  };

  constructor() {}

  resolve(statusCode: number): string {
    if (statusCode in this.messages) {
      return this.messages[statusCode];
    } else {
      return this.messages[500];
    }
  }
}
